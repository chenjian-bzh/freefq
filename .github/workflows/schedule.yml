name: Generate Proxy and Rules for Clash

on:
  workflow_dispatch:
  schedule:
    - cron: "10 */2 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set variables
        shell: bash
        run: |
          echo "RELEASE_NAME=Released on $(date +%Y.%m.%d-%H:%M)" >> $GITHUB_ENV
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

      - name: Move files to publish directory
        run: |
          git clone https://github.com/blackmatrix7/ios_rule_script.git /tmp/ios_rule_script
          mkdir -p /tmp/publish
          mv /tmp/ios_rule_script/rule/Clash /tmp/publish/rules
          sed -i -e 's|## 分类|# Clash Rules|g' /tmp/publish/rules/README.md
          sed -i -e 's|https://github.com/blackmatrix7/ios_rule_script/tree/master/rule/Clash/|./|g' /tmp/publish/rules/README.md
      
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
      - run: |
          npm ci
          npm run build
          mv ./proxies /tmp/publish

      - name: Release and upload assets
        uses: softprops/action-gh-release@v0.1.6
        with:
          name: ${{ env.RELEASE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            /tmp/publish/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Git push assets to "release" branch
        run: |
          cd /tmp/publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f origin release
